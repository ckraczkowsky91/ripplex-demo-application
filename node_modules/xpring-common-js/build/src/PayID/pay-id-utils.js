"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const utils = __importStar(require("@payid-org/utils"));
const pay_id_components_1 = __importDefault(require("./pay-id-components"));
/**
 * A static utility class for Pay ID functionality.
 */
const payIdUtils = {
    /**
     * Parse a PayID string to a set of PayIdComponents object.
     *
     * @param payId - The input Pay ID.
     * @returns A PayIdComponents object if the input was valid, otherwise undefined.
     */
    parsePayId(payId) {
        try {
            utils.parsePayId(payId);
            const [path, host] = utils.splitPayIdString(payId);
            return new pay_id_components_1.default(host, `/${path}`);
        }
        catch (_a) {
            return undefined;
        }
    },
};
exports.default = payIdUtils;
//# sourceMappingURL=pay-id-utils.js.map