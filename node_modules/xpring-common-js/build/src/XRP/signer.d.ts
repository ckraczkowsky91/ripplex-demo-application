import { Transaction } from './generated/org/xrpl/rpc/v1/transaction_pb';
import { TransactionJSON } from './serializer';
import Wallet from './wallet';
/**
 * Abstracts the details of signing.
 */
declare const signer: {
    /**
     * Encode the given raw JSON transaction to hex and sign it.
     *
     * @param transactionJSON - The raw transaction JSON object.
     * @param wallet - The wallet to sign the transaction with.
     *
     * @returns A set of bytes representing the inputs and a signature.
     *
     * @throws An error if we are unable to sign the transaction.
     */
    signTransactionFromJSON(transactionJSON: TransactionJSON, wallet: Wallet): Uint8Array;
    /**
     * Encode the given object to hex and sign it.
     *
     * @param transaction - The transaction to sign.
     * @param wallet - The wallet to sign the transaction with.
     * @returns A set of bytes representing the inputs and a signature.
     */
    signTransaction(transaction: Transaction, wallet: Wallet): Uint8Array | undefined;
};
export default signer;
