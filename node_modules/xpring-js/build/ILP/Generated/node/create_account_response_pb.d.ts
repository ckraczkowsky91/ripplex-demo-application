// package: org.interledger.stream.proto
// file: create_account_response.proto

/* tslint:disable */
/* eslint-disable */

import * as jspb from "google-protobuf";

export class CreateAccountResponse extends jspb.Message { 
    getAccountRelationship(): string;
    setAccountRelationship(value: string): CreateAccountResponse;

    getAssetCode(): string;
    setAssetCode(value: string): CreateAccountResponse;

    getAssetScale(): number;
    setAssetScale(value: number): CreateAccountResponse;

    getMaximumPacketAmount(): number;
    setMaximumPacketAmount(value: number): CreateAccountResponse;


    getCustomSettingsMap(): jspb.Map<string, string>;
    clearCustomSettingsMap(): void;

    getAccountId(): string;
    setAccountId(value: string): CreateAccountResponse;

    getCreatedAt(): string;
    setCreatedAt(value: string): CreateAccountResponse;

    getModifiedAt(): string;
    setModifiedAt(value: string): CreateAccountResponse;

    getDescription(): string;
    setDescription(value: string): CreateAccountResponse;

    getLinkType(): string;
    setLinkType(value: string): CreateAccountResponse;

    getIsInternal(): boolean;
    setIsInternal(value: boolean): CreateAccountResponse;

    getIsConnectioninitiator(): boolean;
    setIsConnectioninitiator(value: boolean): CreateAccountResponse;

    getIlpAddressSegment(): string;
    setIlpAddressSegment(value: string): CreateAccountResponse;

    getIsSendRoutes(): boolean;
    setIsSendRoutes(value: boolean): CreateAccountResponse;

    getIsReceiveRoutes(): boolean;
    setIsReceiveRoutes(value: boolean): CreateAccountResponse;


    hasBalanceSettings(): boolean;
    clearBalanceSettings(): void;
    getBalanceSettings(): CreateAccountResponse.BalanceSettings | undefined;
    setBalanceSettings(value?: CreateAccountResponse.BalanceSettings): CreateAccountResponse;

    getMaxPacketsPerSecond(): number;
    setMaxPacketsPerSecond(value: number): CreateAccountResponse;


    hasSettlementEngineDetails(): boolean;
    clearSettlementEngineDetails(): void;
    getSettlementEngineDetails(): CreateAccountResponse.SettlementEngineDetails | undefined;
    setSettlementEngineDetails(value?: CreateAccountResponse.SettlementEngineDetails): CreateAccountResponse;

    getIsParentAccount(): boolean;
    setIsParentAccount(value: boolean): CreateAccountResponse;

    getIsChildAccount(): boolean;
    setIsChildAccount(value: boolean): CreateAccountResponse;

    getIsPeerAccount(): boolean;
    setIsPeerAccount(value: boolean): CreateAccountResponse;

    getIsPeerOrParentAccount(): boolean;
    setIsPeerOrParentAccount(value: boolean): CreateAccountResponse;

    getPaymentpointer(): string;
    setPaymentpointer(value: string): CreateAccountResponse;


    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): CreateAccountResponse.AsObject;
    static toObject(includeInstance: boolean, msg: CreateAccountResponse): CreateAccountResponse.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: CreateAccountResponse, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): CreateAccountResponse;
    static deserializeBinaryFromReader(message: CreateAccountResponse, reader: jspb.BinaryReader): CreateAccountResponse;
}

export namespace CreateAccountResponse {
    export type AsObject = {
        accountRelationship: string,
        assetCode: string,
        assetScale: number,
        maximumPacketAmount: number,

        customSettingsMap: Array<[string, string]>,
        accountId: string,
        createdAt: string,
        modifiedAt: string,
        description: string,
        linkType: string,
        isInternal: boolean,
        isConnectioninitiator: boolean,
        ilpAddressSegment: string,
        isSendRoutes: boolean,
        isReceiveRoutes: boolean,
        balanceSettings?: CreateAccountResponse.BalanceSettings.AsObject,
        maxPacketsPerSecond: number,
        settlementEngineDetails?: CreateAccountResponse.SettlementEngineDetails.AsObject,
        isParentAccount: boolean,
        isChildAccount: boolean,
        isPeerAccount: boolean,
        isPeerOrParentAccount: boolean,
        paymentpointer: string,
    }


    export class SettlementEngineDetails extends jspb.Message { 
        getSettlementEngineAccountId(): string;
        setSettlementEngineAccountId(value: string): SettlementEngineDetails;

        getBaseUrl(): string;
        setBaseUrl(value: string): SettlementEngineDetails;


        getCustomSettingsMap(): jspb.Map<string, string>;
        clearCustomSettingsMap(): void;


        serializeBinary(): Uint8Array;
        toObject(includeInstance?: boolean): SettlementEngineDetails.AsObject;
        static toObject(includeInstance: boolean, msg: SettlementEngineDetails): SettlementEngineDetails.AsObject;
        static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
        static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
        static serializeBinaryToWriter(message: SettlementEngineDetails, writer: jspb.BinaryWriter): void;
        static deserializeBinary(bytes: Uint8Array): SettlementEngineDetails;
        static deserializeBinaryFromReader(message: SettlementEngineDetails, reader: jspb.BinaryReader): SettlementEngineDetails;
    }

    export namespace SettlementEngineDetails {
        export type AsObject = {
            settlementEngineAccountId: string,
            baseUrl: string,

            customSettingsMap: Array<[string, string]>,
        }
    }

    export class BalanceSettings extends jspb.Message { 
        getMinBalance(): number;
        setMinBalance(value: number): BalanceSettings;

        getSettleThreshold(): number;
        setSettleThreshold(value: number): BalanceSettings;

        getSettleTo(): number;
        setSettleTo(value: number): BalanceSettings;


        serializeBinary(): Uint8Array;
        toObject(includeInstance?: boolean): BalanceSettings.AsObject;
        static toObject(includeInstance: boolean, msg: BalanceSettings): BalanceSettings.AsObject;
        static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
        static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
        static serializeBinaryToWriter(message: BalanceSettings, writer: jspb.BinaryWriter): void;
        static deserializeBinary(bytes: Uint8Array): BalanceSettings;
        static deserializeBinaryFromReader(message: BalanceSettings, reader: jspb.BinaryReader): BalanceSettings;
    }

    export namespace BalanceSettings {
        export type AsObject = {
            minBalance: number,
            settleThreshold: number,
            settleTo: number,
        }
    }

}
