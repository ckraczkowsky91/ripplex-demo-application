/**
 * PayID
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface Address
 */
export interface Address {
    /**
     *
     * @type {string}
     * @memberof Address
     */
    paymentNetwork: string;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    environment?: string;
    /**
     *
     * @type {string}
     * @memberof Address
     */
    addressDetailsType: string;
    /**
     *
     * @type {CryptoAddressDetails}
     * @memberof Address
     */
    addressDetails: CryptoAddressDetails;
}
/**
 *
 * @export
 * @interface Beneficiary
 */
export interface Beneficiary {
    /**
     *
     * @type {string}
     * @memberof Beneficiary
     */
    institutionName: string;
    /**
     *
     * @type {string}
     * @memberof Beneficiary
     */
    userLegalName?: string;
    /**
     *
     * @type {string}
     * @memberof Beneficiary
     */
    userPhysicalAddress?: string;
    /**
     *
     * @type {string}
     * @memberof Beneficiary
     */
    accountId?: string;
}
/**
 *
 * @export
 * @interface Compliance
 */
export interface Compliance {
    /**
     *
     * @type {string}
     * @memberof Compliance
     */
    type: string;
    /**
     *
     * @type {TravelRule}
     * @memberof Compliance
     */
    data: TravelRule;
}
/**
 *
 * @export
 * @interface CryptoAddressDetails
 */
export interface CryptoAddressDetails {
    /**
     *
     * @type {string}
     * @memberof CryptoAddressDetails
     */
    address: string;
    /**
     *
     * @type {string}
     * @memberof CryptoAddressDetails
     */
    tag?: string;
}
/**
 *
 * @export
 * @interface Invoice
 */
export interface Invoice {
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    nonce: string;
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    expirationTime: string;
    /**
     *
     * @type {PaymentInformation}
     * @memberof Invoice
     */
    paymentInformation: PaymentInformation;
    /**
     *
     * @type {Array<string>}
     * @memberof Invoice
     */
    complianceRequirements: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    memo?: string;
    /**
     *
     * @type {Array<InvoiceComplianceHashes>}
     * @memberof Invoice
     */
    complianceHashes?: Array<InvoiceComplianceHashes>;
}
/**
 *
 * @export
 * @interface InvoiceComplianceHashes
 */
export interface InvoiceComplianceHashes {
    /**
     *
     * @type {string}
     * @memberof InvoiceComplianceHashes
     */
    type?: string;
    /**
     *
     * @type {string}
     * @memberof InvoiceComplianceHashes
     */
    hash?: string;
}
/**
 *
 * @export
 * @interface Originator
 */
export interface Originator {
    /**
     *
     * @type {string}
     * @memberof Originator
     */
    userLegalName: string;
    /**
     *
     * @type {string}
     * @memberof Originator
     */
    accountId: string;
    /**
     *
     * @type {string}
     * @memberof Originator
     */
    userPhysicalAddress: string;
    /**
     *
     * @type {string}
     * @memberof Originator
     */
    institutionName: string;
    /**
     *
     * @type {Value}
     * @memberof Originator
     */
    value: Value;
    /**
     *
     * @type {string}
     * @memberof Originator
     */
    timestamp: string;
}
/**
 *
 * @export
 * @interface PaymentInformation
 */
export interface PaymentInformation {
    /**
     *
     * @type {Array<Address>}
     * @memberof PaymentInformation
     */
    addresses: Array<Address>;
    /**
     *
     * @type {string}
     * @memberof PaymentInformation
     */
    proofOfControlSignature?: string;
    /**
     *
     * @type {string}
     * @memberof PaymentInformation
     */
    payId?: string;
    /**
     *
     * @type {string}
     * @memberof PaymentInformation
     */
    memo?: string;
}
/**
 *
 * @export
 * @interface Receipt
 */
export interface Receipt {
    /**
     *
     * @type {string}
     * @memberof Receipt
     */
    invoiceHash: string;
    /**
     *
     * @type {string}
     * @memberof Receipt
     */
    transactionConfirmation: string;
}
/**
 *
 * @export
 * @interface SignatureWrapperCompliance
 */
export interface SignatureWrapperCompliance {
    /**
     *
     * @type {string}
     * @memberof SignatureWrapperCompliance
     */
    messageType: string;
    /**
     *
     * @type {Compliance}
     * @memberof SignatureWrapperCompliance
     */
    message: Compliance;
    /**
     *
     * @type {string}
     * @memberof SignatureWrapperCompliance
     */
    publicKeyType: string;
    /**
     *
     * @type {Array<string>}
     * @memberof SignatureWrapperCompliance
     */
    publicKeyData: Array<string>;
    /**
     *
     * @type {string}
     * @memberof SignatureWrapperCompliance
     */
    publicKey: string;
    /**
     *
     * @type {string}
     * @memberof SignatureWrapperCompliance
     */
    signature: string;
}
/**
 *
 * @export
 * @interface SignatureWrapperInvoice
 */
export interface SignatureWrapperInvoice {
    /**
     *
     * @type {string}
     * @memberof SignatureWrapperInvoice
     */
    messageType: string;
    /**
     *
     * @type {Invoice}
     * @memberof SignatureWrapperInvoice
     */
    message: Invoice;
    /**
     *
     * @type {string}
     * @memberof SignatureWrapperInvoice
     */
    publicKeyType: string;
    /**
     *
     * @type {Array<string>}
     * @memberof SignatureWrapperInvoice
     */
    publicKeyData: Array<string>;
    /**
     *
     * @type {string}
     * @memberof SignatureWrapperInvoice
     */
    publicKey: string;
    /**
     *
     * @type {string}
     * @memberof SignatureWrapperInvoice
     */
    signature: string;
}
/**
 *
 * @export
 * @interface TravelRule
 */
export interface TravelRule {
    /**
     *
     * @type {Originator}
     * @memberof TravelRule
     */
    originator: Originator;
    /**
     *
     * @type {Beneficiary}
     * @memberof TravelRule
     */
    beneficiary: Beneficiary;
}
/**
 *
 * @export
 * @interface Value
 */
export interface Value {
    /**
     *
     * @type {string}
     * @memberof Value
     */
    amount: string;
    /**
     *
     * @type {string}
     * @memberof Value
     */
    scale: string;
}
/**
 * DefaultApi - axios parameter creator
 * @export
 */
export declare const DefaultApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary get-invoice
     * @param {string} nonce
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPathInvoice: (nonce: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary post-invoice
     * @param {string} nonce
     * @param {SignatureWrapperCompliance} [signatureWrapperCompliance]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postPathInvoice: (nonce: string, signatureWrapperCompliance?: SignatureWrapperCompliance | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {Receipt} [receipt]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postPathReceipt: (receipt?: Receipt | undefined, options?: any) => Promise<RequestArgs>;
    /**
     * Resolve a pay id
     * @summary get-pay-id
     * @param {string} path
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resolvePayID: (path: string, options?: any) => Promise<RequestArgs>;
};
/**
 * DefaultApi - functional programming interface
 * @export
 */
export declare const DefaultApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary get-invoice
     * @param {string} nonce
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPathInvoice(nonce: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SignatureWrapperInvoice>>;
    /**
     *
     * @summary post-invoice
     * @param {string} nonce
     * @param {SignatureWrapperCompliance} [signatureWrapperCompliance]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postPathInvoice(nonce: string, signatureWrapperCompliance?: SignatureWrapperCompliance | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SignatureWrapperInvoice>>;
    /**
     *
     * @param {Receipt} [receipt]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postPathReceipt(receipt?: Receipt | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     * Resolve a pay id
     * @summary get-pay-id
     * @param {string} path
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resolvePayID(path: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<PaymentInformation>>;
};
/**
 * DefaultApi - factory interface
 * @export
 */
export declare const DefaultApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @summary get-invoice
     * @param {string} nonce
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getPathInvoice(nonce: string, options?: any): AxiosPromise<SignatureWrapperInvoice>;
    /**
     *
     * @summary post-invoice
     * @param {string} nonce
     * @param {SignatureWrapperCompliance} [signatureWrapperCompliance]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postPathInvoice(nonce: string, signatureWrapperCompliance?: SignatureWrapperCompliance | undefined, options?: any): AxiosPromise<SignatureWrapperInvoice>;
    /**
     *
     * @param {Receipt} [receipt]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postPathReceipt(receipt?: Receipt | undefined, options?: any): AxiosPromise<void>;
    /**
     * Resolve a pay id
     * @summary get-pay-id
     * @param {string} path
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    resolvePayID(path: string, options?: any): AxiosPromise<PaymentInformation>;
};
/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export declare class DefaultApi extends BaseAPI {
    /**
     *
     * @summary get-invoice
     * @param {string} nonce
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    getPathInvoice(nonce: string, options?: any): Promise<import("axios").AxiosResponse<SignatureWrapperInvoice>>;
    /**
     *
     * @summary post-invoice
     * @param {string} nonce
     * @param {SignatureWrapperCompliance} [signatureWrapperCompliance]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    postPathInvoice(nonce: string, signatureWrapperCompliance?: SignatureWrapperCompliance, options?: any): Promise<import("axios").AxiosResponse<SignatureWrapperInvoice>>;
    /**
     *
     * @param {Receipt} [receipt]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    postPathReceipt(receipt?: Receipt, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Resolve a pay id
     * @summary get-pay-id
     * @param {string} path
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    resolvePayID(path: string, options?: any): Promise<import("axios").AxiosResponse<PaymentInformation>>;
}
