"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stringToUint8Array = exports.stringToHex = void 0;
const xpring_common_js_1 = require("xpring-common-js");
const isNode = () => {
    var _a;
    return ((_a = process === null || process === void 0 ? void 0 : process.release) === null || _a === void 0 ? void 0 : _a.name) === 'node';
};
/**
 * Converts a string such that each of its characters are represented as hex.
 *
 * @param value - the string to convert to hex.
 * @returns the hex encoded version of the string.
 */
exports.stringToHex = (value) => {
    return Buffer.from(value).toString('hex');
};
/**
 * Converts a string that is optionally in hex format into a Uint8Array.
 *
 * @param value - the string to convert to a Uint8Array.
 * @param isHex - flag to indicate it's a hex string or not.
 * @returns the Uint8Array value.
 */
exports.stringToUint8Array = (value, isHex) => {
    if ((value === null || value === void 0 ? void 0 : value.length) === 0) {
        return new Uint8Array();
    }
    return value && !isHex
        ? xpring_common_js_1.Utils.toBytes(exports.stringToHex(value))
        : (value && xpring_common_js_1.Utils.toBytes(value)) || undefined;
};
exports.default = isNode;
//# sourceMappingURL=utils.js.map