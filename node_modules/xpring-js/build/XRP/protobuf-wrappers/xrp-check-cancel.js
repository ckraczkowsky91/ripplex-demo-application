"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
/*
 * Represents a CheckCancel transaction on the XRP Ledger.
 *
 * A CheckCancel transaction cancels an unredeemed Check, removing it from the ledger without sending any money.
 * The source or the destination of the check can cancel a Check at any time using this transaction type.
 * If the Check has expired, any address can cancel it.
 *
 * @see: https://xrpl.org/checkcancel.html
 */
class XrpCheckCancel {
    /**
     * @param checkId The ID of the Check ledger object to cancel, as a 64-character hexadecimal string.
     */
    constructor(checkId) {
        this.checkId = checkId;
    }
    /**
     * Constructs an XrpCheckCancel from a CheckCancel protocol buffer.
     *
     * @param checkCancel a CheckCancel (protobuf object) whose field values will be used to construct an XrpCheckCancel
     * @return an XrpCheckCancel with its fields set via the analogous protobuf fields.
     * @see https://github.com/ripple/rippled/blob/3d86b49dae8173344b39deb75e53170a9b6c5284/src/ripple/proto/org/xrpl/rpc/v1/transaction.proto#L126
     */
    static from(checkCancel) {
        var _a;
        const checkId = (_a = checkCancel.getCheckId()) === null || _a === void 0 ? void 0 : _a.getValue_asB64();
        if (!checkId) {
            throw new __1.XrpError(__1.XrpErrorType.MalformedProtobuf, 'CheckCancel protobuf is missing `CheckID` field.');
        }
        return new XrpCheckCancel(checkId);
    }
}
exports.default = XrpCheckCancel;
//# sourceMappingURL=xrp-check-cancel.js.map