import { XrplNetwork } from 'xpring-common-js';
import { CheckCreate } from '../Generated/web/org/xrpl/rpc/v1/transaction_pb';
import XrpCurrencyAmount from './xrp-currency-amount';
export default class XrpCheckCreate {
    readonly destinationXAddress: string;
    readonly sendMax: XrpCurrencyAmount;
    readonly expiration?: number | undefined;
    readonly invoiceId?: string | undefined;
    /**
     * Constructs an XrpCheckCreate from a CheckCreate protocol buffer.
     *
     * @param checkCreate a CheckCreate (protobuf object) whose field values will be used to construct an XrpCheckCreate
     * @return an XrpCheckCreate with its fields set via the analogous protobuf fields.
     * @see https://github.com/ripple/rippled/blob/3d86b49dae8173344b39deb75e53170a9b6c5284/src/ripple/proto/org/xrpl/rpc/v1/transaction.proto#L145
     */
    static from(checkCreate: CheckCreate, xrplNetwork: XrplNetwork): XrpCheckCreate;
    /**
     * @param destinationXAddress The unique address and (optional) destination tag of the account that can cash the Check,
     *                            encoded as an X-address (see https://xrpaddress.info/).
     * @param sendMax Maximum amount of source currency the Check is allowed to debit the sender, including transfer fees on non-XRP currencies.
     *                The Check can only credit the destination with the same currency (from the same issuer, for non-XRP currencies).
     *                For non-XRP amounts, the nested field names MUST be lower-case.
     * @param expiration (Optional) Time after which the Check is no longer valid, in seconds since the Ripple Epoch.
     * @param invoiceId (Optional) Arbitrary 256-bit hash representing a specific reason or identifier for this Check.
     */
    private constructor();
}
