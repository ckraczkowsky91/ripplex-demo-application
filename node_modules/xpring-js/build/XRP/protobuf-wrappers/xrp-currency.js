"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
/**
 * An issued currency on the XRP Ledger
 * @see: https://xrpl.org/currency-formats.html#currency-codes
 */
class XrpCurrency {
    /**
     * @param name 3 character ASCII code
     * @param code 160 bit currency code. 20 bytes
     */
    constructor(name, code) {
        this.name = name;
        this.code = code;
    }
    /**
     * Constructs an XrpCurrency from a Currency.
     *
     * @param currency a Currency (protobuf object) whose field values will be used
     *                 to construct an XRPCurrency
     * @returns an XrpCurrency with its fields set via the analogous protobuf fields.
     * @see https://github.com/ripple/rippled/blob/develop/src/ripple/proto/org/xrpl/rpc/v1/amount.proto#L41
     */
    static from(currency) {
        const currencyName = currency.getName();
        const currencyCode = currency.getCode_asB64();
        if (!currencyName) {
            throw new __1.XrpError(__1.XrpErrorType.MalformedProtobuf, 'Currency protobuf missing required field `name`.');
        }
        if (!currencyCode) {
            throw new __1.XrpError(__1.XrpErrorType.MalformedProtobuf, 'Currency protobuf missing required field `code`.');
        }
        return new XrpCurrency(currencyName, currencyCode);
    }
}
exports.default = XrpCurrency;
//# sourceMappingURL=xrp-currency.js.map