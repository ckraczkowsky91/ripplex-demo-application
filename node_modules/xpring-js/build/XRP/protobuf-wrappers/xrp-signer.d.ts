import { XrplNetwork } from 'xpring-common-js';
import { Signer } from '../Generated/web/org/xrpl/rpc/v1/transaction_pb';
export default class XrpSigner {
    readonly accountXAddress: string;
    readonly signingPublicKey: Uint8Array;
    readonly transactionSignature: Uint8Array;
    /**
     * Constructs an XrpSigner from a Signer.
     *
     * @param signer a Signer (protobuf object) whose field values will be used
     *               to construct an XrpSigner
     * @return an XrpSigner with its fields set via the analogous protobuf fields.
     * @see https://github.com/ripple/rippled/blob/develop/src/ripple/proto/org/xrpl/rpc/v1/transaction.proto#L90
     */
    static from(signer: Signer, xrplNetwork: XrplNetwork): XrpSigner;
    /**
     * @param accountXAddress The address associated with this signature, as it appears in the SignerList, encoded as an
     *                X-address (see https://xrpaddress.info/).
     * @param signingPublicKey The public key used to create this signature.
     * @param transactionSignature A signature for this transaction, verifiable using the SigningPubKey.
     */
    private constructor();
}
