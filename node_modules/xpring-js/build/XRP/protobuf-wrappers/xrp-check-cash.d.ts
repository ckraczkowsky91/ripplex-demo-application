import { CheckCash } from '../Generated/web/org/xrpl/rpc/v1/transaction_pb';
import XrpCurrencyAmount from './xrp-currency-amount';
export default class XrpCheckCash {
    readonly checkId: string;
    readonly amount?: XrpCurrencyAmount | undefined;
    readonly deliverMin?: XrpCurrencyAmount | undefined;
    /**
     * Constructs an XrpCheckCash from a CheckCash protocol buffer.
     *
     * @param checkCash a CheckCash (protobuf object) whose field values will be used to construct an XrpCheckCash
     * @return an XrpCheckCash with its fields set via the analogous protobuf fields.
     * @see https://github.com/ripple/rippled/blob/3d86b49dae8173344b39deb75e53170a9b6c5284/src/ripple/proto/org/xrpl/rpc/v1/transaction.proto#L132
     */
    static from(checkCash: CheckCash): XrpCheckCash;
    /**
     * @param checkId The ID of the Check ledger object to cash, as a 64-character hexadecimal string.
     * @param amount (Optional) Redeem the Check for exactly this amount, if possible.
     *                The currency must match that of the SendMax of the corresponding CheckCreate transaction.
     *                You must provide either this field or deliverMin.
     * @param deliverMin (Optional) Redeem the Check for at least this amount and for as much as possible.
     *                    The currency must match that of the SendMax of the corresponding CheckCreate transaction.
     *                    You must provide either this field or amount.
     */
    private constructor();
}
