import { XrplNetwork } from 'xpring-common-js';
import { DepositPreauth } from '../Generated/web/org/xrpl/rpc/v1/transaction_pb';
export default class XrpDepositPreauth {
    readonly authorizeXAddress?: string | undefined;
    readonly unauthorizeXAddress?: string | undefined;
    /**
     * Constructs an XrpDepositPreauth from a DepositPreauth protocol buffer.
     *
     * @param depositPreauth a DepositPreauth (protobuf object) whose field values will be used to construct an XrpDepositPreauth
     * @return an XrpDepositPreauth with its fields set via the analogous protobuf fields.
     * @see https://github.com/ripple/rippled/blob/3d86b49dae8173344b39deb75e53170a9b6c5284/src/ripple/proto/org/xrpl/rpc/v1/transaction.proto#L159
     */
    static from(depositPreauth: DepositPreauth, xrplNetwork: XrplNetwork): XrpDepositPreauth;
    /**
     * Note: authorize and unauthorize are mutually exclusive fields: one but not both should be set.
     *       Addresses are encoded as X-addresses.  See https://xrpaddress.info/.
     * @param authorizeXAddress (Optional) The XRP Ledger address of the sender to preauthorize, encoded as an X-address.
     * @param unauthorizeXAddress (Optional) The XRP Ledger address of a sender whose preauthorization should be revoked,
     *                            encoded as an X-address.
     */
    private constructor();
}
