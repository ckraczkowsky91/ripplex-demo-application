import { BigNumber } from 'bignumber.js';
declare function dropsToXrp(drops: BigNumber.Value): string;
declare function xrpToDrops(xrp: BigNumber.Value): string;
declare function isString(value: unknown): boolean;
/**
 * A type guard for the IssuedCurrency interface.
 *
 * @param object The object to check for conformance to the IssuedCurrency interface.
 */
declare function isIssuedCurrency(object: any): boolean;
declare const _default: {
    isValidAddress(address: string): boolean;
    isValidXAddress(address: string): boolean;
    isValidClassicAddress(address: string): boolean;
    encodeXAddress(classicAddress: string, tag: number | undefined, test?: boolean | undefined): string | undefined;
    decodeXAddress(xAddress: string): import("xpring-common-js").ClassicAddress | undefined;
    transactionBlobToTransactionHash(transactionBlobHex: string): string | undefined;
    isTestNetwork(network: import("xpring-common-js/build/src/XRP/xrpl-network").default): boolean;
    dropsToXrp: typeof dropsToXrp;
    xrpToDrops: typeof xrpToDrops;
    isString: typeof isString;
    isIssuedCurrency: typeof isIssuedCurrency;
};
export default _default;
